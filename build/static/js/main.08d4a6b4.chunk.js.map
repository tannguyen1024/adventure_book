{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/userAllReducer.js","redux/reducers/storyReducer.js","redux/reducers/storeStoryReducer.js","redux/reducers/firstSnippetReducer.js","redux/reducers/snippetReducer.js","redux/reducers/snippetEditReducer.js","redux/reducers/snippetChildReducer.js","redux/reducers/oneCommentReducer.js","redux/reducers/commentReducer.js","redux/reducers/editStoryReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/userAllSaga.js","redux/sagas/storySaga.js","redux/sagas/snippetStartSaga.js","redux/sagas/snippetSaga.js","redux/sagas/commentOneSaga.js","redux/sagas/commentPostSaga.js","redux/sagas/storyPostSaga.js","redux/sagas/commentSaga.js","redux/sagas/commentDeleteSaga.js","redux/sagas/userUpdateSaga.js","redux/sagas/adminEditStorySaga.js","redux/sagas/storyUpdateSaga.js","redux/sagas/snippetUpdateSaga.js","redux/sagas/actionCreateSaga.js","redux/sagas/actionDeleteSaga.js","redux/sagas/index.js","components/Structure/Nav/Nav.js","components/Structure/Footer/Footer.js","components/Structure/LoginPage/LoginPage.js","components/Structure/RegisterPage/RegisterPage.js","components/Structure/ProtectedRoute/ProtectedRoute.js","components/Style/Style.jsx","components/Structure/AboutPage/AboutPage.js","components/Home/Home.js","components/Structure/InfoPage/InfoPage.js","components/Admin_User/Admin_User.jsx","components/Story_Select/Story_Select.jsx","components/Comments/Comments.jsx","components/Snippet_Page/Snippet_Page.jsx","components/Admin_Create_Story/Admin_Create_Story.jsx","components/Admin_Comments/Admin_Comments.jsx","components/Admin_Edit_Story/Admin_Edit_Story.jsx","components/Admin_Edit_Snippet/Admin_Edit_Snippet.jsx","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","loginMode","userReducer","payload","userAllReducer","storyReducer","storeStoryReducer","console","log","firstSnippetChild","snippet","snippetEdit","snippetChild","allComments","editStoryReducer","rootReducer","errors","user","userAll","story","firstSnippet","oneComment","allComment","editStory","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","response","status","takeLatest","registerUser","registrationSaga","fetchUser","userSaga","get","data","fetchStory","storySaga","fetchSnippet","snippetStartSaga","id","snippet_id","response2","fetchOneComment","postComment","setComment","postStory","story_id","fetchAllComment","comment","eraseComment","deleteComment","delete","putUser","userUpdate","adminEditStorySaga","putStory","storyUpdate","putSnippet","snippetUpdate","createAction","actionCreate","child","deleteAction","actionDelete","rootSaga","all","adminEditStory","userAllSaga","commentPost","storyPost","connect","props","className","to","src","width","alt","onClick","dispatch","Footer","LoginPage","username","password","login","event","preventDefault","handleInputChangeFor","propertyName","setState","target","value","this","role","onSubmit","htmlFor","name","onChange","Component","RegisterPage","ComponentToShow","ComponentToProtect","component","otherProps","styles","card","maxWidth","backgroundColor","marginLeft","marginTop","position","media","paddingTop","boxShadow","transition","media_comment","media_create","title","fontSize","pos","fontFamily","textAlign","pos2","root","spicy","background","border","color","primary","main","contrastText","secondary","spicy_middle","display","margin","spicy_edit","spicy_connection","spicy_submit","cursive","cursive_middle","ending","marginRight","float","paper","padding","shadow","chip","root2","flexGrow","AboutPage","classes","Card","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","variant","withStyles","Home","componentDidMount","startClick","history","push","editClick","admin","Button","style","map","key","Box","story_path","story_description","story_title","IconButton","author","CardActions","reduxState","InfoPage","Admin_User","handleClick","users","size","Story_Select","window","location","reload","page","match","params","snip_path","snip_description","snip_title","moment","require","Comments","handleChange","Paper","Grid","container","wrap","spacing","item","Chip","label","xs","TextField","multiline","fullWidth","placeholder","date","comment_date","format","Snippet_Page","prevProps","prevState","snip_ending","Divider","Admin_Create_Story","user_id","handleTitle","handleDescription","handlePath","handleSubmit","Input","Admin_Comments","handleDelete","comment_id","handleChangeTitle","handleChangeDescription","handleChangePath","changeTitle","changeDescription","changePath","endingChange","handleChangeAction","handleClickAction","alert","String","selectedValue","Radio","checked","inputProps","maxLength","App","exact","from","path","Admin_Edit_Story","Admin_Edit_Snippet","render","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.08d4a6b4.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const userAllReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_USER_ALL':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userAllReducer;\n","const storyReducer = (state = [], action) => {\n      switch (action.type) {\n    case 'SET_STORY':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default storyReducer;","const storeStoryReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_FIRST_SNIPPET':\n            console.log ('Payload is:',action.payload);\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default storeStoryReducer;","const firstSnippetChild = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_FIRST_SNIPPET_CHILD':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default firstSnippetChild;","const snippet = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_SNIPPET':\n            return action.payload[0];\n        default:\n            return state;\n    }\n}\n\nexport default snippet;","const snippetEdit = (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_EDIT_SNIPPET':\n            console.log('Snippet Edit has:', action.payload[0])\n            return action.payload[0];\n        case 'FETCH_SNIPPET': /* This sets the Currently Selected Story back to Blank! */\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport default snippetEdit;","const snippetChild = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_SNIPPET_CHILD':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default snippetChild;","const firstSnippetChild = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_ONE_COMMENT':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default firstSnippetChild;","const allComments = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_COMMENT':\n            console.log('ALL COMMENTS PAYLOAD IS:',action.payload)\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default allComments;","const editStoryReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_EDIT_STORY':\n            // console.log('editStoryReducer PAYLOAD IS:', action.payload)\n            return action.payload;\n        case 'FETCH_STORY': /* This sets the Currently Selected Story back to Blank! */\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport default editStoryReducer;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport userAll from './userAllReducer';\nimport story from './storyReducer';\nimport firstSnippet from './storeStoryReducer';\nimport firstSnippetChild from './firstSnippetReducer';\nimport snippet from './snippetReducer';\nimport snippetEdit from './snippetEditReducer';\nimport snippetChild from './snippetChildReducer';\nimport oneComment from './oneCommentReducer';\nimport allComment from './commentReducer';\nimport editStory from './editStoryReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  userAll, // Shows ALL users\n  story, // Shows ALL stories\n  firstSnippet, // Shows CURRENT story.\n  firstSnippetChild, // Shows CURRENT story's child\n  snippet, // Shows current snippet info\n  snippetEdit, // Used by edit page\n  snippetChild, // Shows current snippet's children \n  oneComment, // Shows current snippet's comment\n  allComment, // Shows all comments\n  editStory, // Sets the current story to edit\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const response = yield axios.get('/api/user/all');\n    yield put({ type: 'SET_USER_ALL', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER_ALL', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// Fetches ALL the stories\nfunction* fetchStory() {\n    try {\n        const response = yield axios.get('/api/story');\n        yield put({ type: 'SET_STORY', payload: response.data });\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* storySaga() {\n    yield takeLatest('FETCH_STORY', fetchStory);\n}\n\nexport default storySaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n/* This receives all the snippet info for the first snippet */\nfunction* fetchSnippet(action) {\n    // console.log('In firstSnippet SAGA with:', action.payload)\n    let id=action.payload;\n    try {\n        const response = yield axios.get(`/api/snippet/start/${id}`);\n        yield put({ type: 'SET_FIRST_SNIPPET', payload: response.data });\n        const response2 = yield axios.get(`/api/snippet/start/child/${response.data[0].snippet_id}`);\n        yield put({ type: 'SET_FIRST_SNIPPET_CHILD', payload: response2.data});\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* snippetStartSaga() {\n    yield takeLatest('FETCH_FIRST_SNIPPET', fetchSnippet);\n}\n\nexport default snippetStartSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n/* This receives all the snippet info for the current snippet */\nfunction* fetchSnippet(action) {\n    console.log('In snippetSaga with:', action.payload)\n    let id=action.payload;\n    try {\n        const response = yield axios.get(`/api/snippet/${id}`);\n        console.log ('snippet saga:',response.data)\n        yield put({ type: 'SET_SNIPPET', payload: response.data });\n        yield put({ type: 'SET_EDIT_SNIPPET', payload: response.data});\n        const response2 = yield axios.get(`/api/snippet/child/${response.data[0].id}`);\n        yield put({ type: 'SET_SNIPPET_CHILD', payload: response2.data});\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* firstSnippet() {\n    yield takeLatest('FETCH_SNIPPET', fetchSnippet);\n}\n\nexport default firstSnippet;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n/* This receives all the snippet info for the current snippet */\nfunction* fetchOneComment(action) {\n    console.log('In snippetSaga with:', action.payload)\n    let id = action.payload;\n    try {\n        const response = yield axios.get(`/api/comment/${id}`);\n        yield put({ type: 'SET_ONE_COMMENT', payload: response.data });\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* oneComment() {\n    yield takeLatest('FETCH_ONE_COMMENT', fetchOneComment);\n}\n\nexport default oneComment;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n/* This receives all the snippet info for the current snippet */\nfunction* postComment(action) {\n    console.log('In commentPostSaga with:', action.payload)\n    try {\n        yield axios.post(`/api/comment/`, action.payload);\n        yield put({ type: 'FETCH_ONE_COMMENT', payload: action.payload.snippet });\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* setComment() {\n    yield takeLatest('POST_COMMENT', postComment);\n}\n\nexport default setComment;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n/* This receives all the snippet info for the current snippet */\nfunction* postStory(action) {\n    console.log('In storyPostSaga with:', action.payload)\n    try {\n        const response = yield axios.post(`/api/story/`, action.payload);\n        // console.log( response.data[0].id )\n        let story_id = response.data[0].id;\n        yield axios.post(`/api/snippet/start/${story_id}`, action.payload)\n        // yield put({ type: 'FETCH_ONE_COMMENT', payload: action.payload.snippet });\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* setComment() {\n    yield takeLatest('POST_STORY', postStory);\n}\n\nexport default setComment;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n/* This receives all the snippet info for the current snippet */\nfunction* fetchAllComment() {\n    try {\n        const response = yield axios.get(`/api/comment/`);\n        console.log ('RESPONSE IS', response.data)\n        yield put({ type: 'SET_COMMENT', payload: response.data });\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* comment() {\n    yield takeLatest('FETCH_COMMENT', fetchAllComment);\n}\n\nexport default comment;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n/* This receives all the snippet info for the current snippet */\nfunction* eraseComment(action) {\n    console.log('In snippetSaga with:', action.payload)\n    let id = action.payload;\n    try {\n        yield axios.delete(`/api/comment/${id}`);\n        yield put({ type: 'FETCH_COMMENT' });\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* deleteComment() {\n    yield takeLatest('DELETE_COMMENT', eraseComment);\n}\n\nexport default deleteComment;\n\n\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n/* This receives all the snippet info for the current snippet */\nfunction* putUser(action) {\n    console.log('In userUpdateSaga with:', action.payload)\n    let id = action.payload;\n    try {\n        yield axios.put(`/api/user/update/${id}`);\n        yield put({ type: 'FETCH_USER_ALL' });\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* userUpdate() {\n    yield takeLatest('UPDATE_USER', putUser);\n}\n\nexport default userUpdate;\n\n\n","import axios from 'axios';\nimport {put, takeLatest} from 'redux-saga/effects';\n\nfunction * editStory (action) {\n    try {\n        // console.log ('RUNNING GENERATOR NOW')\n        const response = yield axios.get(`/api/story/edit/${action.payload}`)\n        // console.log ('BACK FROM GENERATOR with', response.data)\n        yield put({ type: 'SET_EDIT_STORY', payload: response.data})\n    }\n    catch (error) {\n\n    }\n}\n\nfunction * adminEditStorySaga () {\n    yield takeLatest('GET_EDIT_STORY', editStory);\n}\n\nexport default adminEditStorySaga;","import axios from 'axios';\nimport {put, takeLatest} from 'redux-saga/effects';\n\n// Fetches ALL the stories\nfunction* putStory(action) {\n    try {\n        const id = action.payload.story_id;\n        const response = yield axios.put(`/api/story/${id}`, action.payload);\n        yield put({ type: 'FETCH_STORY'});\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* storyUpdate() {\n    yield takeLatest('UPDATE_STORY', putStory);\n}\n\nexport default storyUpdate;\n","import axios from 'axios';\nimport {put, takeLatest} from 'redux-saga/effects';\n\n// Fetches ALL the stories\nfunction* putSnippet(action) {\n    try {\n        const id = action.payload.id;\n        yield axios.put(`/api/snippet/${id}`, action.payload);\n        yield put({ type: 'FETCH_SNIPPET', payload: id});\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* snippetUpdate() {\n    yield takeLatest('UPDATE_SNIPPET', putSnippet);\n}\n\nexport default snippetUpdate;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n/* This receives all the snippet info for the current snippet */\nfunction* createAction(action) {\n    console.log('In actionCreate SAGA with:', action.payload)\n    try {\n        const response = yield axios.post(`/api/snippet/start/${action.payload.story_id}`, action.payload);\n        let child = response.data[0].id;\n        console.log('The child is:', child)\n        yield axios.post(`/api/snippet/action/${child}`, action.payload);\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* actionCreate() {\n    yield takeLatest('NEW_ACTION', createAction); /* STATE is sent here */\n}\n\nexport default actionCreate;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n/* This receives all the snippet info for the current snippet */\nfunction* deleteAction(action) {\n    console.log('In actionDelete SAGA with:', action.payload)\n    try {\n        yield axios.delete(`/api/snippet/action/${action.payload.id}`);\n        yield axios.delete(`/api/snippet/delete/${action.payload.child}`);\n        console.log('Deleted junction:', action.payload.id, 'and child:', action.payload.child);\n    } catch (error) {\n        console.log('User get request failed', error);\n    }\n}\n\nfunction* actionDelete() {\n    yield takeLatest('DELETE_ACTION', deleteAction); /* STATE is sent here */\n}\n\nexport default actionDelete;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport userAllSaga from './userAllSaga';\nimport storySaga from './storySaga';\nimport snippetStartSaga from './snippetStartSaga';\nimport snippet from './snippetSaga';\nimport oneComment from './commentOneSaga';\nimport commentPost from './commentPostSaga';\nimport storyPost from './storyPostSaga';\nimport comment from './commentSaga';\nimport deleteComment from './commentDeleteSaga';\nimport userUpdate from './userUpdateSaga';\nimport adminEditStory from './adminEditStorySaga';\nimport storyUpdate from './storyUpdateSaga';\nimport snippetUpdate from './snippetUpdateSaga';\nimport actionCreate from './actionCreateSaga';\nimport actionDelete from './actionDeleteSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    adminEditStory(),\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    userAllSaga(),\n    storySaga(),\n    snippetStartSaga(),\n    snippet(),\n    oneComment(),\n    commentPost(),\n    storyPost(),\n    comment(), // All Comments Saga\n    deleteComment(), // Deletes a Comment\n    userUpdate(), // Updates one user to admin\n    adminEditStory(),\n    storyUpdate(), // Edit one story\n    snippetUpdate(), // Updates one snippet\n    actionCreate(), // Creates one ACTION\n    actionDelete(), // DELETES ONE ACTION\n  ]);\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n// import LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\n\nconst Nav = (props) => (\n  <div className=\"nav\">\n    <Link to=\"/home\">\n      <h2 className=\"nav-title\">\n        <img src='../../logo_white.png' width=\"250\" alt=\"Adventure Book\" />\n      </h2>\n    </Link>\n    <div className=\"nav-right\">\n      <Link className=\"nav-link\" to=\"/home\">\n        {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n        {props.user.id ? 'Home' : 'Login / Register'}\n      </Link>\n      {/* Show the link to the info page and the logout button if the user is logged in */}\n      {props.user.id && (\n        <>\n          <Link className=\"nav-link\" to=\"/info\">\n            Info Page\n          </Link>\n          <Link onClick={() => props.dispatch({ type: 'LOGOUT' })} className=\"nav-link\" to=\"/home\">Log Out</Link>\n        </>\n      )}\n      {/* Always show this link since the about page is not protected */}\n      <Link className=\"nav-link\" to=\"/about\">\n        About\n      </Link>\n    </div>\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const reduxStateOnProps = ({ user }) => ({ user });\nconst reduxStateOnProps = state => ({\n  user: state.user,\n});\n\nexport default connect(reduxStateOnProps)(Nav);\n","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    &copy; Prime Digital Academy\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const reduxStateOnProps = ({errors}) => ({ errors });\nconst reduxStateOnProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(reduxStateOnProps)(LoginPage);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form onSubmit={this.registerUser}>\n          <h1>New Adventurer</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const reduxStateOnProps = ({errors}) => ({ errors });\nconst reduxStateOnProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(reduxStateOnProps)(RegisterPage);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst reduxStateOnProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(reduxStateOnProps)(ProtectedRoute)\n\n\n","const styles = {\n    card: {\n        maxWidth: 200,\n        backgroundColor: 'rgba(222, 222, 222, 0.1)',\n        marginLeft: '25px',\n        marginTop: '25px',\n    },\n    snippet: {\n        maxWidth: 600,\n        backgroundColor: 'rgba(222, 222, 222, 0.1)',\n        marginLeft: '25px',\n        marginTop: '25px',\n        position: 'relative',\n    },\n    media: {\n        width: 600,\n        paddingTop: '56.25%', // 16:9\n        boxShadow: '3px 3px 15px black',\n        transition: 'all 1s',\n        '&:hover': {\n            paddingTop: '65%',\n            boxShadow: '3px 3px 50px black',\n        }\n    },\n    media_comment: {\n        width: 600,\n        paddingTop: '20%', // 16:9\n        boxShadow: '3px 3px 15px black',\n        transition: 'all 1s',\n        '&:hover': {\n            paddingTop: '25%',\n            boxShadow: '3px 3px 50px black',\n        }\n    },\n    media_create: {\n        width: 600,\n        paddingTop: '30%', // 16:9\n        boxShadow: '3px 3px 15px black',\n        transition: 'all 0.5s',\n        '&:hover': {\n            paddingTop: '35%',\n            boxShadow: '3px 3px 50px black',\n        }\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        fontSize: 14,\n        fontFamily: 'Courgette',\n        textAlign: 'right',\n    },\n    pos2: {\n        fontSize: 20,\n        fontFamily: 'Courgette',\n        position: 'absolute',\n        textAlign: 'text-top',\n    },\n    root: {\n        maxWidth: 345,\n    },\n    spicy: {\n        fontFamily: 'Permanent Marker',\n        background: '#076585',  /* fallback for old browsers */\n        // background: linear-gradient(to left, #fff, #076585), /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n        // background: 'rgb(63, 105, 251)',\n        background: 'linear-gradient(200deg, #657394, #3f4c6b)',\n        border: 0,\n        // borderRadius: 3,\n        color: 'white',\n        boxShadow: '2px 2px 8px black',\n        // height: 30,\n        // padding: '0 30px',\n        type: 'dark',\n        primary: { main: \"#e91e63\", contrastText: \"#fff\" },\n        secondary: { main: \"#03a9f4\", contrastText: \"#fff\" },\n        transition: 'all 0.5s',\n        '&:hover': {\n            backgroundColor: 'linear-gradient(200deg, #6b7896, #4c5b7d)',\n            boxShadow: '2px 2px 18px black',\n        }\n    },\n    spicy_middle: {\n        fontFamily: 'Permanent Marker',\n        background: '#8a2b2b',  /* fallback for old browsers */\n        // background: linear-gradient(to left, #fff, #076585), /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n        // background: 'rgb(63, 105, 251)',\n        background: 'linear-gradient(200deg, #8a2b2b, #3a1212)',\n        border: 0,\n        // borderRadius: 3,\n        color: 'white',\n        boxShadow: '2px 2px 8px black',\n        // height: 30,\n        // padding: '0 30px',\n        type: 'dark',\n        primary: { main: \"#e91e63\", contrastText: \"#fff\" },\n        secondary: { main: \"#03a9f4\", contrastText: \"#fff\" },\n        transition: 'all 0.5s',\n        display: 'inline-block', //Typically a button wouldn't need its own line        \n        margin: '0 auto',\n        width: '200px', //or whatever\n        '&:hover': {\n            backgroundColor: 'linear-gradient(200deg, #6b7896, #4c5b7d)',\n            boxShadow: '2px 2px 18px black',\n        }\n    },\n    spicy_edit: {\n        fontFamily: 'Permanent Marker',\n        // background: '#076585',  /* fallback for old browsers */\n        // background: 'linear-gradient(200deg, #8a2b2b, #3a1212)',\n        border: 0,\n        color: '#8a2b2b',\n        // boxShadow: '2px 2px 8px black',\n        // height: 30,\n        type: 'light',\n        margin: '0 auto',\n        // primary: { main: \"#e91e63\", contrastText: \"#fff\" },\n        // secondary: { main: \"#03a9f4\", contrastText: \"#fff\" },\n        transition: 'all 0.5s',\n        '&:hover': {\n            backgroundColor: 'linear-gradient(200deg, #6b7896, #4c5b7d)',\n            boxShadow: '2px 2px 18px black',\n        }\n    },\n    spicy_connection: {\n        fontFamily: 'Permanent Marker',\n        background: '#076585',  /* fallback for old browsers */\n        background: 'linear-gradient(200deg, #8a2b2b, #3a1212)',\n        border: 0,\n        color: 'white',\n        boxShadow: '2px 2px 8px black',\n        // height: 30,\n        type: 'light',\n        // margin: '0 auto',\n        marginTop: '15px',\n        primary: { main: \"#e91e63\", contrastText: \"#fff\" },\n        secondary: { main: \"#03a9f4\", contrastText: \"#fff\" },\n        transition: 'all 0.5s',\n        '&:hover': {\n            backgroundColor: 'linear-gradient(200deg, #6b7896, #4c5b7d)',\n            boxShadow: '2px 2px 18px black',\n        }\n    },\n    spicy_submit: {\n        fontFamily: 'Permanent Marker',\n        background: '#076585',  /* fallback for old browsers */\n        background: 'linear-gradient(200deg, #8a2b2b, #3a1212)',\n        border: 0,\n        color: 'white',\n        boxShadow: '2px 2px 8px black',\n        // height: 30,\n        type: 'light',\n        // margin: '0 auto',\n        // marginTop: '15px',\n        primary: { main: \"#e91e63\", contrastText: \"#fff\" },\n        secondary: { main: \"#03a9f4\", contrastText: \"#fff\" },\n        transition: 'all 0.5s',\n        '&:hover': {\n            backgroundColor: 'linear-gradient(200deg, #6b7896, #4c5b7d)',\n            boxShadow: '2px 2px 18px black',\n        }\n    },\n    cursive: {\n        fontFamily: 'Courgette', \n        // fontSize: 17,\n    },\n    cursive_middle: {\n        textAlign: 'center',\n        // display: 'inline-block', //Typically a button wouldn't need its own line        \n        margin: '0 auto',\n        width: '200px', //or whatever\n        fontFamily: 'Courgette',\n    },\n    ending: {\n        fontFamily: 'Courgette',\n        fontSize: 14,\n        marginTop: 15,\n        marginRight: 15,\n        float: 'right'\n    },\n    paper: {\n        maxWidth: 600,\n        backgroundColor: 'rgba(222, 222, 222, 0.1)',\n        margin: 25,\n        padding: 10,\n    },\n    shadow: {\n        boxShadow: '2px 2px 7px black',\n    },\n    chip: {\n        boxShadow: '2px 2px 7px black',\n    },\n    root2: {\n        flexGrow: 1,\n    },\n};\n\nexport default styles;","import React, {Component} from 'react';\nimport { Card, CardActionArea, CardMedia, CardContent, withStyles, Typography}  from '@material-ui/core'\nimport styles from '../../Style/Style';\nimport PropTypes from 'prop-types';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\n\n\nclass AboutPage extends Component { \n  render(){\n  const { classes } = this.props;\n\n    return(\n      <div>\n        <div>\n          <Card className={classes.snippet}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image=\"https://images.unsplash.com/photo-1452421822248-d4c2b47f0c81?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1334&q=80\"\n                title=\"Picture of Adventure\" />\n            <CardContent>\n          <Typography className={classes.cursive} gutterBottom variant=\"h5\" component=\"h2\">\n              <label>What is Adventure Book?</label>\n              </Typography>\n            <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"div\">\n              Adventure Book is aimed to fully realize the joys of the Choose Your Own Adventure novels that were popular in the 90’s.  These novels often started on one page and the reader would make decisions that would take them to a different page of the book.  This branching decision making made every reader’s experience different.  The Adventure Book doesn’t stop there however!  As an administrator, you can also create your own adventure from scratch with multiple branching paths and endings.\n            </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </div>\n      </div>\n    )\n  }\n};\n\nAboutPage.propTypes = { classes: PropTypes.object.isRequired };\n\nexport default (withStyles(styles)(AboutPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import LogOutButton from '../LogOutButton/LogOutButton';\n/* IMPORTS HERE */\nimport { IconButton, Box, Card, CardActionArea, CardMedia, CardContent, CardActions, Typography, withStyles, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\nimport EditIcon from '@material-ui/icons/Edit';\n\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\nclass Home extends Component {\n\n  componentDidMount = () => {\n    this.props.dispatch({ type: 'FETCH_STORY' })\n  }\n\n  startClick = (event, story) => {\n    this.props.dispatch({ type: 'FETCH_FIRST_SNIPPET', payload: story.id })\n    this.props.history.push(`/story/${story.id}`)\n  }\n\n  editClick = (event, story) => {\n    this.props.dispatch({ type: 'GET_EDIT_STORY', payload: story.id });\n    console.log(`You've clicked things!`, story)\n    this.props.history.push(`/story/edit/${story.id}`);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const admin = this.props.user.admin;\n\n    return (\n      <div>\n\n        <h1 id=\"welcome\">Greetings Adventurer {this.props.user.username}!</h1>\n\n        {/* Administrator Only Buttons */}\n\n        {admin && (\n          <>\n            <Button className={classes.spicy_submit} variant=\"contained\" color=\"primary\" onClick={() => { this.props.history.push('/admin/user') }}>Manage Adventurers</Button>\n            <Button style={{ marginLeft: 25 }} className={classes.spicy_submit} variant=\"contained\" color=\"primary\" onClick={() => { this.props.history.push('/admin/comments') }}>Manage Comments</Button>\n            <Button style={{ marginLeft: 25 }} className={classes.spicy_submit} variant=\"contained\" color=\"primary\" onClick={() => { this.props.history.push('/admin/create_story') }}>Create Story</Button>\n          </>\n        )}\n\n        {/* Standard View */}\n\n        <h2>Choose Your Story</h2>\n        {this.props.story.map(story => <div key={story.id}>\n\n          <Card className={classes.snippet}>\n            <CardActionArea>\n              <Box boxShadow={3}><CardMedia\n                className={classes.media}\n                image={story.story_path}\n                title={story.story_description}\n              /></Box>\n              <CardContent>\n                <Typography className={classes.cursive} gutterBottom variant=\"h5\" component=\"h2\">\n                  {story.story_title} \n                  {admin && <IconButton className={classes.spicy_edit} onClick={(event) => this.editClick(event, story)}><EditIcon /></IconButton>}\n                  {/* The line above causes a warning in Inspect Tool */}\n                </Typography>\n                <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {story.story_description}\n                </Typography>\n                <Typography className={classes.cursive} color=\"textSecondary\" component=\"h6\">\n                  Crafted by {story.author}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button className={classes.spicy} variant=\"contained\" color=\"secondary\" onClick={(event) => this.startClick(event, story)}>\n                Start {/* Conditionally Renders Start or Edit button */}\n              </Button>\n            </CardActions>\n          </Card>\n        </div>)}\n      </div>\n    )\n  }\n};\n\nHome.propTypes = { classes: PropTypes.object.isRequired };\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst reduxStateOnProps = reduxState => ({\n  user: reduxState.user,\n  story: reduxState.story,\n  firstSnippet: reduxState.firstSnippet\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(reduxStateOnProps)(withStyles(styles)(Home));\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst InfoPage = () => (\n  <div>\n    <p>\n      Info Page\n    </p>\n  </div>\n);\n\nexport default InfoPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardContent, CardActions, Typography, withStyles, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style.jsx';\n\nclass Admin_User extends Component {\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'FETCH_USER_ALL' })\n    }\n\n    handleClick = (event, user) => {\n        console.log('You are promoting:', user)\n        this.props.dispatch({ type: 'UPDATE_USER', payload: user})\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <>\n                {\n                    this.props.users.map(user =>\n                        <div key={user.id}><Card className={classes.card}>\n                            <CardContent>\n\n                                <Typography className={classes.title && classes.cursive} color=\"textSecondary\" gutterBottom>\n                                    Name\n                                </Typography>\n\n                                <Typography className={classes.cursive} variant=\"h5\" component=\"h2\">\n                                    {user.username}\n                                </Typography>\n\n                                <br/>\n\n                                <Typography className={classes.title && classes.cursive} color=\"textSecondary\">\n                                    Admin Status:\n                                </Typography>\n\n                                <Typography className={classes.cursive} component=\"p\">\n                                    {user.admin ? 'Yes' : 'No'}\n                                </Typography>\n\n                            </CardContent>\n                            <CardActions>\n                                {user.admin ? '' : <Button onClick={(event) => this.handleClick(event, user.id)} className={classes.spicy_submit} variant=\"contained\" color=\"primary\" size=\"small\">Promote to Admin</Button>}\n                            </CardActions>\n                        </Card></div>)\n                }\n            </>\n        )\n    }\n}\n\nAdmin_User.propTypes = { classes: PropTypes.object.isRequired };\n\nconst mapStateToProps = reduxState => ({ users: reduxState.userAll, user: reduxState.user });\nexport default connect(mapStateToProps)(withStyles(styles)(Admin_User));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { IconButton, Box, Card, CardActionArea, CardMedia, CardContent, CardActions, Typography, withStyles, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style';\nimport EditIcon from '@material-ui/icons/Edit';\n\nclass Story_Select extends Component {\n    componentDidMount() {\n        /* Send Axios Command to receive first Snippet */\n        this.props.dispatch({ type: 'FETCH_FIRST_SNIPPET', payload: this.props.match.params.id })\n    }\n\n    handleClick = (child, event) => {\n        this.props.history.push(`/snippet/${child.child}`);\n        window.location.reload();\n        this.setState({ page: this.props.match.params.id });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <>\n                {this.props.snippet.map(snippet =>\n                    <div key={snippet.snippet_id}><Card className={classes.snippet}>\n                        <CardActionArea>\n                            <Box boxShadow={3}><CardMedia\n                                className={classes.media}\n                                image={snippet.snip_path}\n                                title={snippet.snip_description}\n                            /></Box>\n                            <CardContent>\n                                <Typography className={classes.cursive} gutterBottom variant=\"h5\" component=\"h2\">\n                                    {snippet.snip_title} {this.props.user.admin && <IconButton onClick={() => this.props.history.push(`/snippet_edit/${snippet.snippet_id}`)} className={classes.spicy_edit}><EditIcon /></IconButton>}\n                                </Typography>\n                                <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                    {snippet.snip_description}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            {this.props.child.map(child =>\n                                <div key={child.id}>\n                                    <Button className={classes.spicy} variant=\"outlined\" size=\"small\" onClick={() => { this.props.history.push(`/snippet/${child.child}`) }}>{child.action}</Button><p />\n                                </div>\n                            )}\n                        </CardActions>\n                    </Card>\n                    </div>\n                )}\n            </>\n        )\n    }\n}\n\nStory_Select.propTypes = { classes: PropTypes.object.isRequired };\n\nconst mapStateToProps = reduxState => ({\n    story: reduxState.story,\n    user: reduxState.user,\n    snippet: reduxState.firstSnippet,\n    child: reduxState.firstSnippetChild\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(withStyles(styles)(Story_Select));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Chip, TextField, Paper, Grid, Avatar, Box, Divider, Card, CardActionArea, CardMedia, CardContent, CardActions, Typography, withStyles, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style.jsx';\nconst moment = require('moment');\n\nclass Comments extends Component {\n    state = { user: this.props.user.id, comment: '', snippet: this.props.id };\n\n    componentDidMount = () => {\n        // console.log('History is', this.props.history);\n        console.log('id is currently:', this.props.id);\n        this.props.dispatch({ type: 'FETCH_ONE_COMMENT', payload: this.props.id })\n    }\n\n    handleChange = (event) => {\n        console.log(event.target.value)\n        this.setState({ comment: event.target.value })\n    }\n\n    handleClick = () => {\n        console.log(this.state)\n        this.props.dispatch({ type: 'POST_COMMENT', payload: this.state })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <>\n                <Paper className={classes.paper}>\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item>\n                            <Chip variant=\"outlined\" label={this.props.user.username} className={classes.chip} />\n                        </Grid>\n                        <Grid item xs>\n                            <TextField onChange={this.handleChange} multiline fullWidth={true} placeholder=\"How was it?\"></TextField>\n                        </Grid>\n                        <Grid item xs>\n                            <Button onClick={this.handleClick} className={classes.spicy}>Leave Feedback</Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n\n                {this.props.comment.map(comment => {\n                    let date = moment(comment.comment_date).format(`MMM Do YYYY hh:mm A`);\n                    return (\n                        <div key={comment.comment}>\n                            <Paper className={classes.paper}>\n                                <Grid container wrap=\"nowrap\" spacing={2}>\n                                    <Grid item>\n                                        <Chip variant=\"outlined\" label={comment.username} className={classes.chip} />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Typography className={classes.cursive}>{comment.comment}</Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Typography className={classes.cursive}>\n                                            {date}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </div>)\n                }\n                )}\n            </>\n        )\n    }\n}\n\nComments.propTypes = { classes: PropTypes.object.isRequired };\n\nconst mapStateToProps = reduxState => ({\n    story: reduxState.story,\n    user: reduxState.user,\n    snippet: reduxState.snippet,\n    child: reduxState.snippetChild,\n    comment: reduxState.oneComment\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(withStyles(styles)(Comments));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Comments from '../Comments/Comments.jsx';\nimport { IconButton, Box, Divider, Card, CardActionArea, CardMedia, CardContent, CardActions, Typography, withStyles, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style.jsx';\nimport EditIcon from '@material-ui/icons/Edit';\n\nclass Snippet_Page extends Component {\n    state = '';\n\n    handleClick = (child, event) => {\n        this.props.history.push(`/snippet/${child.child}`);\n        window.location.reload();\n        this.setState({ page: this.props.match.params.id });\n    }\n\n    componentDidMount = () => {\n        // console.log('History is', this.props.history);\n        console.log('YOU ARE ON SNIPPET:',this.props.match.params);\n        this.props.dispatch({ type: 'FETCH_SNIPPET', payload: this.props.match.params.id });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.match.params.id !== prevProps.match.params.id) {\n            this.setState({ id: this.props.match.params.id });\n            window.location.reload();\n        }\n    }\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <>\n                \n                    \n                        <Card className={classes.snippet}>\n                            <CardActionArea>\n                                <Box boxShadow={3}><CardMedia\n                                    className={classes.media}\n                                    image={this.props.snippet.snip_path}\n                                    title={this.props.snippet.snip_description}\n                                /></Box>\n                                <CardContent>\n                                    <Typography className={classes.cursive} gutterBottom variant=\"h5\" component=\"h2\">\n                                        {this.props.snippet.snip_title} {this.props.user.admin && <IconButton onClick={() => this.props.history.push(`/snippet_edit/${this.props.match.params.id}`)} className={classes.spicy_edit}><EditIcon /></IconButton>}\n                                    </Typography>\n                                    <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {this.props.snippet.snip_description} \n                                    </Typography>\n                                    <Typography className={classes.ending}>\n                                    {this.props.snippet.snip_ending &&\n                                        <>\n                                            The End.\n                                            </>\n                                        }</Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                {this.props.snippet.snip_ending === false && <>\n                                {this.props.child.map(child =>\n                                    <div key={child.id}>\n                                        <Button className={classes.spicy} size=\"small\" variant=\"contained\" color=\"secondary\" onClick={(event) => this.handleClick(child, event)}>{child.action}</Button><p />\n                                    </div>\n                                )}</>}\n                            </CardActions>\n\n                            <CardActions>\n                                {/* {this.props.user.admin && <Button variant=\"contained\" color=\"secondary\" className={classes.spicy_edit}><EditIcon/></Button>} */}\n                            </CardActions>\n\n                        </Card>\n\n                        {this.props.snippet.snip_ending &&\n                            <> <br /><Divider /><br /><Comments id={this.props.match.params.id}/> </>}\n\n                    \n                \n            </>\n        )\n    }\n}\n\nSnippet_Page.propTypes = { classes: PropTypes.object.isRequired };\n\nconst mapStateToProps = reduxState => ({\n    story: reduxState.story,\n    user: reduxState.user,\n    snippet: reduxState.snippet,\n    child: reduxState.snippetChild\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(withStyles(styles)(Snippet_Page));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, TextField, Box, Card, CardActionArea, CardMedia, CardContent, CardActions, Typography, withStyles, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style'\n\nclass Admin_Create_Story extends Component {\n    state = { user_id: this.props.user.id, story_title: '', story_description: '', story_path: 'https://cdn.pixabay.com/photo/2017/07/22/11/46/adventure-2528477_1280.jpg'}\n\n    handleTitle = (event) => {\n        this.setState({story_title: event.target.value});\n    }\n    handleDescription = (event) => {\n        this.setState({ story_description: event.target.value });\n    }\n    handlePath = (event) => {\n        this.setState({ story_path: event.target.value });\n    }\n    handleSubmit = () => {\n        this.props.dispatch({ type: 'POST_STORY', payload: this.state});\n        this.props.dispatch({ type: 'FETCH_STORY' });\n        this.props.history.push(`/home`);\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <>\n                <div>\n                    <Card className={classes.snippet}>\n                        <CardActionArea>\n                            <Box boxShadow={3}>\n                                <CardMedia\n                                className={classes.media_create}\n                                image='../create.jpeg'\n                                title='Crafting an adventure!'\n                            /></Box>\n                            <CardContent>\n                                <Typography className={classes.cursive} gutterBottom variant=\"h5\" component=\"h2\">\n                                    <label>Title: </label><Input onChange={this.handleTitle} multiline placeholder=\"Insert story title here.\"/>\n                                </Typography>\n                                <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"h1\">\n                                    <label>Description: </label><TextField onChange={this.handleDescription} color=\"secondary\" multiline fullWidth={true} placeholder=\"Insert a description of your story here.\"/>\n                                </Typography>\n                                <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"h1\">\n                                    <label>Image URL: </label><TextField onChange={this.handlePath} color=\"secondary\" multiline fullWidth={true} placeholder=\"Insert path to image here.  Example: http://address.com/picture.png\"/>\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            <Button onClick={this.handleSubmit} className={classes.spicy_submit} variant=\"contained\" color=\"secondary\">\n                                Submit your Story {/* Conditionally Renders Start or Edit button */}\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </div>\n            </>\n        )\n    }\n}\n\nAdmin_Create_Story.propTypes = { classes: PropTypes.object.isRequired };\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst reduxStateOnProps = reduxState => ({\n    user: reduxState.user,\n    story: reduxState.story\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(reduxStateOnProps)(withStyles(styles)(Admin_Create_Story));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Chip, TextField, Paper, Grid, Avatar, Box, Divider, Card, CardActionArea, CardMedia, CardContent, CardActions, Typography, withStyles, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style.jsx';\nconst moment = require('moment');\n\nclass Admin_Comments extends Component {\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'FETCH_COMMENT' })\n    }\n\n    handleDelete = (event, comment) => {\n        console.log ('Your Comment is:',comment)\n        this.props.dispatch({ type: 'DELETE_COMMENT', payload: comment.comment_id})\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <>\n                {\n                    this.props.comment.map(comment => \n                    { let date = moment(comment.comment_date).format(`MMM Do YYYY hh:mm A`);\n                        return (<div key={comment.comment}>\n                            <Card className={classes.snippet} variant=\"outlined\">\n                                <Box boxShadow={3}><CardMedia\n                                    className={classes.media_comment}\n                                    image={comment.snip_path}\n                                    title={comment.snip_title}\n                                /></Box>\n                                <CardContent>\n                                    <Typography className={classes.pos} color=\"textSecondary\" gutterBottom>\n                                        {comment.story_title} | {comment.snip_title}<br />\n                                        {date}\n                                    </Typography>\n                                    <Typography className={classes.pos2} color=\"textPrimary\">\n                                        {comment.username}\n                                    </Typography>\n                                    <Typography className={classes.cursive_middle} variant=\"body2\" component=\"p\">\n                                        \"{comment.comment}\"\n                                        <br />\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Button onClick={(event) => this.handleDelete(event, comment)} className={classes.spicy_middle} size=\"small\">Delete Post</Button>\n                                </CardActions>\n                            </Card>\n                        </div>)}\n                    )\n                }\n\n            </>\n        )\n    }\n}\n\nAdmin_Comments.propTypes = { classes: PropTypes.object.isRequired };\n\nconst mapStateToProps = reduxState => ({\n    user: reduxState.user,\n    comment: reduxState.allComment\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(withStyles(styles)(Admin_Comments));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, TextField, Box, Card, CardActionArea, CardMedia, CardContent, CardActions, Typography, withStyles, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style'\n\nclass Admin_Create_Story extends Component {\n\n    state = { story_id: '', story_title: '', story_description: '', story_path: '', user_id: this.props.user.id}\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'GET_EDIT_STORY', payload: this.props.match.params.id });\n        console.log('componentDidMount - MOUNTED')\n    }\n\n    componentDidUpdate(prevProps) {\n        // Whenever our reducer changes, this performs an update on our state.\n        // console.log('-----------------CURRENT PROP IS:', this.props.editStory.id, 'prevPROP IS', prevProps.editStory.id);\n        if (this.props.editStory.id !== prevProps.editStory.id) {\n            console.log('This is a NEW STORY')\n            this.setState({\n                story_id: this.props.editStory.id,\n                story_title: this.props.editStory.story_title,\n                story_description: this.props.editStory.story_description,\n                story_path: this.props.editStory.story_path\n            })\n        }\n    }\n\n    handleChangeTitle = (event) => {\n        this.setState({ story_title: event.target.value })\n        // console.log(this.state)\n    }\n\n    handleChangeDescription = (event) => {\n        this.setState({ story_description: event.target.value })\n        // console.log(this.state)\n    }\n\n    handleChangePath = (event) => {\n        this.setState({ story_path: event.target.value })\n        // console.log(this.state)\n    }\n\n    handleClick = () => {\n        this.props.dispatch({ type: 'UPDATE_STORY', payload: this.state });\n        this.props.history.push('/home');\n    }\n\n    render() {\n        let story = this.state;\n        const { classes } = this.props; /* Material UI classes */\n        return (\n            <>\n                <Card className={classes.snippet}>\n                    <CardActionArea>\n                        {this.state.story_path === '' ?\n                            <CardMedia\n                                className={classes.media}\n                                image={story.story_path}\n                                title='Crafting an adventure!'\n                            /> :\n                            <CardMedia\n                                className={classes.media}\n                                image={this.state.story_path}\n                                title='Crafting an adventure!'\n                            />}\n                        <CardContent>\n                            <Typography className={classes.cursive} gutterBottom variant=\"h5\" component=\"h2\">\n                                <label>Title: </label><Input onChange={this.handleChangeTitle} multiline value={story.story_title} placeholder=\"Insert story title here.\" />\n                            </Typography>\n                            <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"div\">\n                                <label>Description: </label><TextField onChange={this.handleChangeDescription} color=\"secondary\" value={story.story_description} multiline fullWidth={true} placeholder=\"Insert description here.\" />\n                            </Typography>\n                            <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"div\">\n                                <label>Image URL: </label><TextField onChange={this.handleChangePath} color=\"secondary\" value={story.story_path} multiline fullWidth={true} placeholder=\"Insert path to image here.  Example: http://address.com/picture.png\" />\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <CardActions>\n                        <Button onClick={this.handleClick} className={classes.spicy_submit} variant=\"contained\" color=\"secondary\">\n                            Submit your Changes {/* Conditionally Renders Start or Edit button */}\n                        </Button>\n                    </CardActions>\n                </Card>\n            </>\n        )\n    }\n}\n\nAdmin_Create_Story.propTypes = { classes: PropTypes.object.isRequired };\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst reduxStateOnProps = reduxState => ({\n    user: reduxState.user,\n    story: reduxState.story,\n    editStory: reduxState.editStory\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(reduxStateOnProps)(withStyles(styles)(Admin_Create_Story));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Comments from '../Comments/Comments.jsx';\nimport { IconButton, Input, TextField, Box, Divider, Card, CardActionArea, CardMedia, CardContent, CardActions, Typography, withStyles, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport styles from '../Style/Style.jsx';\nimport DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\n\n/* Radio MUI */\nimport Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormHelperText from '@material-ui/core/FormHelperText';\n// import FormLabel from '@material-ui/core/FormLabel';\n\nclass Snippet_Page extends Component {\n    state = { id: this.props.match.params.id, snip_title: '', snip_description: '', snip_ending: '', snip_path: '', story_id: '', action: '', };\n\n    handleClick = (child, event) => {\n        this.props.history.push(`/snippet/${child.child}`);\n        window.location.reload();\n        this.setState({ page: this.props.match.params.id });\n    }\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'FETCH_SNIPPET', payload: this.props.match.params.id });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log('-----------------CURRENT PROP IS:', this.props.snippetEdit.id, 'prevPROP IS', prevProps.snippetEdit.id);\n        // console.log('-----------------CURRENT PROP IS:', this.props.snippet.id, 'prevPROP IS', prevProps.snippet.id)\n        if (this.props.snippetEdit.id !== prevProps.snippetEdit.id) {\n            console.log('This is a NEW STORY')\n            // this.props.dispatch({ type: 'FETCH_SNIPPET', payload: this.props.match.params.id })\n            this.setState({\n                id: this.props.snippetEdit.id,\n                snip_title: this.props.snippetEdit.snip_title,\n                snip_description: this.props.snippetEdit.snip_description,\n                snip_path: this.props.snippetEdit.snip_path,\n                snip_ending: String(this.props.snippetEdit.snip_ending),\n                story_id: this.props.snippetEdit.story_id,\n            })\n        }\n    }\n\n    changeTitle = (event) => {\n        this.setState({ snip_title: event.target.value })\n    }\n    changeDescription = (event) => {\n        this.setState({ snip_description: event.target.value })\n    }\n    changePath = (event) => {\n        this.setState({ snip_path: event.target.value });\n    }\n\n    handleSubmit = () => {\n        this.props.dispatch({type: 'UPDATE_SNIPPET', payload: this.state});\n        console.log('SUBMIT:', this.state);\n        this.props.history.push(`/snippet/${this.props.match.params.id}`);\n      }\n\n    deleteAction = (event, child) => {\n        console.log('SUBMITTING FOR DELETION:', child);\n        this.props.dispatch({ type: 'DELETE_ACTION', payload: child});\n        this.setState({ state: this.state }); /* Used to re-render DOM */\n        this.props.dispatch({ type: 'FETCH_SNIPPET', payload: this.props.match.params.id });\n    }\n\n    endingChange = (event) => {\n        this.setState({ snip_ending: event.target.value });\n    };\n\n\n    handleChangeAction = (event) => {\n        this.setState({ action: event.target.value });\n    }\n\n    handleClickAction = () => {\n        if(this.state.action===''){\n            alert('Please enter an action before submitting.'); return};\n        console.log('Submitting:', this.state.action);\n        this.props.dispatch({type: 'NEW_ACTION', payload: this.state});\n        this.setState({ state: this.state }); /* Used to re-render DOM */\n        this.props.dispatch({ type: 'FETCH_SNIPPET', payload: this.props.match.params.id });\n    }\n\n\n    render() {\n        let selectedValue = String(this.state.snip_ending);\n        const { classes } = this.props;\n        // console.log('STATE IS CURRENTLY:', this.state)\n        return (\n            <>\n                <Card className={classes.snippet}>\n                    <CardActionArea>\n                        <Box boxShadow={3}>\n                            <CardMedia\n                                className={classes.media}\n                                image={this.state.snip_path}\n                                title={this.props.snippetEdit.snip_description} />\n                        </Box>\n                        <CardContent>\n                            <Typography className={classes.cursive} gutterBottom variant=\"h5\" component=\"h2\">\n                                <label>Title: </label><Input onChange={this.changeTitle} value={this.state.snip_title} multiline placeholder=\"Title goes here.\"></Input>\n                            </Typography>\n                            <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"div\">\n                                <label>Description: </label><TextField onChange={this.changeDescription} value={this.state.snip_description} color=\"secondary\" multiline fullWidth={true} placeholder=\"Insert description here.\"></TextField>\n                            </Typography>\n                            <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"div\">\n                                <label>Image URL: </label><TextField onChange={this.changePath} color=\"secondary\" value={this.state.snip_path} multiline fullWidth={true} placeholder=\"Insert path to image here.  Example: http://address.com/picture.png\" />\n                            </Typography>\n                            <Typography className={classes.ending}>\n                                ENDING:\n                                True<Radio\n                                    checked={selectedValue === 'true'}\n                                    onChange={this.endingChange}\n                                    value='true'\n                                    name=\"radio-button-demo\"\n                                    inputProps={{ 'aria-label': 'TRUE' }}\n                                />\n                                False<Radio\n                                    checked={selectedValue === 'false'}\n                                    onChange={this.endingChange}\n                                    value='false'\n                                    name=\"radio-button-demo\"\n                                    inputProps={{ 'aria-label': 'FALSE' }}\n                                />\n                            </Typography>\n                            \n                        </CardContent>\n                        <CardContent>\n                        <Button onClick={this.handleSubmit} className={classes.spicy_submit} variant=\"contained\" color=\"secondary\">\n                            Submit Changes\n                        </Button>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n\n                {this.state.snip_ending === 'false' &&\n                <Card className={classes.snippet}>\n                <CardContent>\n                        <Typography className={classes.cursive} gutterBottom variant=\"h5\" component=\"h2\">\n                            Action Manager\n                        </Typography>\n                        <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"div\">\n                            <label>Action Name: </label>\n                            <TextField inputProps={{ maxLength: 50 }} onChange={this.handleChangeAction} multiline placeholder=\"Insert a new action\">\n                            </TextField><br /><Button onClick={this.handleClickAction} className={classes.spicy_connection} variant=\"contained\" color=\"secondary\">\n                                Add Action\n                        </Button>\n                        </Typography>\n                </CardContent>\n                <CardContent>\n                    <Typography className={classes.cursive} variant=\"body2\" color=\"textSecondary\" component=\"div\">\n                        Current Actions:\n                    </Typography>\n                    <Divider/>\n                </CardContent>\n                <CardContent> {/* Conditionally renders if ending is true or false */}\n                {this.props.snippetEdit.snip_ending === false && <>\n                    {this.props.child.map(child =>\n                        <div key={child.id}>\n                            <Button className={classes.spicy} size=\"small\" variant=\"contained\" color=\"secondary\" onClick={(event) => this.handleClick(child, event)}>{child.action}</Button> <IconButton className={classes.spicy_edit} onClick={(event)=>this.deleteAction(event, child)}><DeleteForeverRoundedIcon /></IconButton><p />\n                        </div>\n\n                    )}</>}\n                    </CardContent>\n                </Card>}\n                {/* {this.props.snippetEdit.snip_ending &&\n                    <> <br /><Divider /><br /><Comments id={this.props.match.params.id} /> </>} */}\n            </>\n        )\n    }\n}\n\nSnippet_Page.propTypes = { classes: PropTypes.object.isRequired };\n\nconst mapStateToProps = reduxState => ({\n    story: reduxState.story,\n    user: reduxState.user,\n    snippet: reduxState.snippet,\n    snippetEdit: reduxState.snippetEdit,\n    child: reduxState.snippetChild\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(withStyles(styles)(Snippet_Page));","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Nav from '../Structure/Nav/Nav';\nimport Footer from '../Structure/Footer/Footer';\nimport ProtectedRoute from '../Structure/ProtectedRoute/ProtectedRoute';\nimport AboutPage from '../Structure/AboutPage/AboutPage';\nimport Home from '../Home/Home';\nimport InfoPage from '../Structure/InfoPage/InfoPage';\n/* IMPORTS HERE */\nimport Admin_User from '../Admin_User/Admin_User.jsx';\nimport Story_Select from '../Story_Select/Story_Select.jsx';\nimport Snippet_Page from '../Snippet_Page/Snippet_Page.jsx';\nimport Admin_Create_Story from '../Admin_Create_Story/Admin_Create_Story.jsx';\nimport Admin_Comments from '../Admin_Comments/Admin_Comments';\nimport Admin_Edit_Story from '../Admin_Edit_Story/Admin_Edit_Story';\nimport Admin_Edit_Snippet from '../Admin_Edit_Snippet/Admin_Edit_Snippet';\n// import { createMuiTheme, makeStyles, ThemeProvider} from '@material-ui/core/styles';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'})\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n            <Route exact path=\"/about\" component={AboutPage}/>\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <ProtectedRoute exact path=\"/home\" component={Home}/>\n            <ProtectedRoute exact path=\"/admin/create_story\" component={Admin_Create_Story}/>\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n            <ProtectedRoute exact path=\"/info\" component={InfoPage}/>\n            {/* Adds link to protected route. */}\n            {/* <ProtectedRoute exact path=\"/admin_story_view\" component={Admin_Story_View} /> */}\n            <ProtectedRoute exact path=\"/admin/user\" component={Admin_User} />\n            <ProtectedRoute exact path=\"/admin/comments\" component={Admin_Comments} />\n            <ProtectedRoute exact path=\"/story/edit/:id\" component={Admin_Edit_Story} />\n            <ProtectedRoute exact path=\"/story/:id\" component={Story_Select} />\n            <ProtectedRoute path=\"/snippet/:id\" component={Snippet_Page} />\n            <ProtectedRoute exact path=\"/snippet_edit/:id\" component={Admin_Edit_Snippet} />\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  // [sagaMiddleware] :\n  // [sagaMiddleware];\n[sagaMiddleware, logger] :\n[sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}